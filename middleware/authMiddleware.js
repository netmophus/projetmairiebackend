
const jwt = require('jsonwebtoken');

const authMiddleware = (req, res, next) => {
  const token = req.headers.authorization?.split(' ')[1];
  
  if (!token) {
    console.error('‚ùå Erreur : Token manquant dans les headers');
    return res.status(401).json({ message: 'Non autoris√©, token manquant' });
  }

  try {
    //console.log('üîç Token re√ßu :', token); // Log du token re√ßu
    const decoded = jwt.verify(token, process.env.JWT_SECRET); // Assure-toi que la cl√© correspond √† celle utilis√©e pour signer
    //console.log('‚úÖ Token d√©cod√© avec succ√®s :', decoded); // Log du contenu d√©cod√© du token

    req.user = {
      id: decoded.id,
      name: decoded.name,  // üî• Assure-toi que le nom est bien inclus dans le token
      role: decoded.role,
      phone: decoded.phone, // Assure-toi que ces champs sont inclus dans le token
    };


  

    next();
  } catch (err) {
    console.error('‚ùå Erreur lors de la v√©rification du token :', err.message);
    return res.status(403).json({ message: 'Token invalide ou expir√©.' });
  }
};

module.exports = authMiddleware;
