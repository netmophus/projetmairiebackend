const express = require('express');
const router = express.Router();
const taxAssessmentController = require('../controllers/taxAssessmentController');
const authMiddleware = require('../middleware/authMiddleware');
const roleMiddleware = require('../middleware/roleMiddleware');

// ğŸ”¹ CrÃ©er un avis dâ€™imposition pour un contribuable (rÃ©servÃ© aux collecteurs)
router.post('/create', authMiddleware, roleMiddleware('collector'), taxAssessmentController.createTaxAssessment);

// ğŸ”¹ RÃ©cupÃ©rer l'avis d'imposition d'un contribuable (rÃ©servÃ© aux collecteurs)
router.get('/:taxpayerId', authMiddleware, roleMiddleware('collector'), taxAssessmentController.getTaxAssessmentByTaxpayer);

// ğŸ”¹ Mettre Ã  jour un avis d'imposition (ex: ajout dâ€™une nouvelle taxe, rÃ©servÃ© aux collecteurs)
router.put('/update/:assessmentId', authMiddleware, roleMiddleware('collector'), taxAssessmentController.updateTaxAssessment);

// ğŸ”¹ Supprimer un avis d'imposition (rÃ©servÃ© aux collecteurs)
router.delete('/delete/:assessmentId', authMiddleware, roleMiddleware('collector'), taxAssessmentController.deleteTaxAssessment);

// ğŸ”¹ RÃ©cupÃ©rer tous les avis dâ€™imposition (rÃ©servÃ© aux collecteurs)
router.get('/', authMiddleware, roleMiddleware('collector'), taxAssessmentController.getAllTaxAssessments);

// âœ… Nouvelle Route : RÃ©cupÃ©rer les taxes d'un contribuable pour une annÃ©e donnÃ©e
router.get('/taxpayer-taxes/:taxpayerId', authMiddleware, roleMiddleware('collector'), taxAssessmentController.getTaxpayerTaxesByYear);



module.exports = router;
