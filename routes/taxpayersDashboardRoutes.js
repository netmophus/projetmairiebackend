// üìå Importation des modules n√©cessaires
const express = require('express');
const router = express.Router();
const taxpayersDashboardController = require('../controllers/taxpayersDashboardController');
const authMiddleware = require('../middleware/authMiddleware');
const roleMiddleware = require('../middleware/roleMiddleware');
const Payment = require('../models/Payment');

// üìå Route pour l'historique des paiements
router.get(
    '/payment-history',
    (req, res, next) => {
        console.log('üì• Requ√™te re√ßue sur /payment-history');
        next();
    },
    authMiddleware,
    roleMiddleware(['contribuable']), // üîí Acc√®s r√©serv√© aux contribuables
    taxpayersDashboardController.getPaymentHistory
);


router.get(
  '/total-due',
  authMiddleware,
  roleMiddleware(['contribuable']),
  taxpayersDashboardController.getTotalDue
);


router.get(
  '/total-monthly-annual-due',
  authMiddleware,
  roleMiddleware(['contribuable']),
  taxpayersDashboardController.getTotalMonthlyAndAnnualDue
);


// ‚úÖ Route pour obtenir le montant total pay√©
router.get(
  '/total-paid',
  authMiddleware,
  roleMiddleware('contribuable'),
  taxpayersDashboardController.getTotalPaid
);


router.get(
  '/user-info',
  authMiddleware,
  (req, res) => {
    console.log("üîë R√©cup√©ration des informations de l'utilisateur connect√© (Contribuable)");
    res.json({
      name: req.user.name,
      phone: req.user.phone
    });
  }
);




// routes/taxpayers-dashboard.js

// router.get(
//   '/payment-history',
//   authMiddleware,
//   async (req, res) => {
//     try {
//       // üî• Double populate pour acc√©der √† name et phone dans User
//       const payments = await Payment.find({ taxpayer: req.user.taxpayerId })
//         .populate({
//           path: 'collector', // On acc√®de d'abord √† Collector depuis Payment
//           populate: {
//             path: 'user', // Puis on acc√®de √† User depuis Collector
//             select: 'name phone', // On s√©lectionne le nom et le t√©l√©phone
//             model: 'User'
//           }
//         })
//         .populate('tax', 'name'); // Optionnel pour avoir le nom de la taxe

//       console.log('‚úÖ Paiements trouv√©s :', payments);
//       res.json({ payments });
//     } catch (err) {
//       console.error('Erreur lors de la r√©cup√©ration des paiements:', err.message);
//       res.status(500).json({ message: 'Erreur serveur.' });
//     }
//   }
// );





// ‚úÖ Route pour les d√©tails par taxe
router.get(
  '/tax-details',
  authMiddleware,
  roleMiddleware(['contribuable']),
  taxpayersDashboardController.getTaxDetails  // üëâ Assure-toi d'avoir cette m√©thode dans ton contr√¥leur
);



module.exports = router;
